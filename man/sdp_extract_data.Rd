% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sdp_extraction_functions.R
\name{sdp_extract_data}
\alias{sdp_extract_data}
\title{Extract SDP raster data at a set of locations.}
\usage{
sdp_extract_data(
  raster,
  locations,
  date_start = NULL,
  date_end = NULL,
  years = NULL,
  catalog_id = NULL,
  url_template = NULL,
  bind = TRUE,
  return_type = "SpatVector",
  method = "bilinear",
  sum_fun = "mean",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{raster}{class \code{SpatRaster}. A raster dataset (class \code{terra::SpatRaster}) to extract data from.}

\item{locations}{A vector dataset (class \code{terra::SpatVector} or \code{sf::sf}) containing points, lines, or polygons at which to sample the raster data.}

\item{date_start}{class \code{Date}. If the raster dataset is a daily or monthly time-series, the minimum date of extracted data.}

\item{date_end}{class \code{Date}. If the raster dataset is a daily or monthly time-series, the maximum date of extracted data.}

\item{years}{numeric. If the raster dataset is an annual time-series, the years of data requested.}

\item{catalog_id}{character. Alternative method of specifying which dataset to sample. NOT IMPLEMENTED YET.}

\item{url_template}{character. Alternative method of specifying whic dataset to sample. NOT IMPLEMENTED YET.}

\item{bind}{logical. Should the extracted data be bound to the inputs? If not, a dataset is returned with the ID field in common with input data.}

\item{return_type}{character. Class of the output. If \code{return_type = 'SpatVector'}, retains geometry (as class \code{terra::SpatVector}). If \code{return_type = 'sf'} then also retains geometry as a Simple Features object (class \code{sf::sf}). If \code{return_type = 'DataFrame'} returns an ordinary data frame.}

\item{method}{Method for extracting values ("simple" or "bilinear"). With "simple" values for the cell a point falls in are returned. With "bilinear" the returned values are interpolated from the values of the four nearest raster cells. Ignored if \code{locations} represent lines or polygons.}

\item{sum_fun}{character or function. Function to use to summarize raster cells that overlap input features. Ignored if extracting by point. If \code{NULL}, and locations represent lines or polygons, the function returns all cell values.}

\item{verbose}{logical. Should the function print messages about the process?}

\item{...}{other arguments to pass along to \code{terra::Extract()}}
}
\value{
a \code{data.frame} or \code{SpatVector} with extracted data. Each layer in the raster dataset is a column in the returned data.
}
\description{
Extract SDP raster data at a set of locations.
}
\examples{

## Loads a raster.
sdp_rast <- sdp_get_raster("R4D004",date_start=as.Date("2021-11-02"),date_end=as.Date("2021-11-03"))

## Sampling locations.
location_pts <- data.frame(SiteName=c("Roaring Judy","Gothic","Galena Lake"),
                          Lat=c(38.716995,38.958446,39.021644),
                          Lon=c(-106.853186,-106.988934,-107.072569))
location_sv <- terra::vect(location_pts,geom=c("Lon","Lat"),crs="EPSG:4327")

## Extract data for sampling locations.
sdp_extr_sv <- sdp_extract_data(sdp_rast,location_sv,return_spatvector=TRUE)
sdp_extr_sv

## Can also return a data frame.
sdp_extr_df <- sdp_extract_data(sdp_rast,location_sv,return_spatvector=FALSE)
sdp_extr_df


}
