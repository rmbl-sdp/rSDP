[{"path":"https://rmbl-sdp.github.io/rSDP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ian Breckheimer. Author, maintainer.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Breckheimer (2023). rSDP: Discover, Query, Subset Data RMBL Spatial Data Platform. https://github.com/rmbl-sdp/rSDP, https://rmbl-sdp.github.io/rSDP.","code":"@Manual{,   title = {rSDP: Discover, Query, and Subset Data from the RMBL Spatial Data Platform},   author = {Ian Breckheimer},   year = {2023},   note = {https://github.com/rmbl-sdp/rSDP, https://rmbl-sdp.github.io/rSDP}, }"},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"rsdp","dir":"","previous_headings":"","what":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"rSDP package provides simple interface discovering, querying, subsetting data products incorporated RMBL Spatial Data Platform. RMBL SDP provides set curated, high-resolution, high-fidelity geospatial datasets set domains Western Colorado (USA) vicinity Rocky Mountain Biological Laboratory. information RMBL SDP see . SDP data products provided geospatial raster datasets cloud-optimized Geotiff (COG) format. rSDP package provides functions access datasets cloud storage (Amazon S3) without downloading.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"can install development version rSDP GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"rmbl-sdp/rSDP\")"},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"discovering-sdp-data-and-metadata","dir":"","previous_headings":"","what":"Discovering SDP Data and Metadata","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"package provides functions sdp_get_catalog(), sdp_get_metadata() download information datasets currently available spatial attributes .","code":"library(rSDP)  ## Gets entries for vegetation data products in the Upper Gunnison (UG) domain. sdp_cat <- sdp_get_catalog(domains=\"UG\",                             types=\"Vegetation\",                            deprecated=FALSE,                            return_stac=FALSE) sdp_cat[,1:5] #>    CatalogID  Release       Type                       Product Domain #> 54    R3D013 Release3 Vegetation              Understory Cover     UG #> 55    R3D014 Release3 Vegetation       Vegetation Canopy Cover     UG #> 56    R3D015 Release3 Vegetation      Vegetation Canopy Height     UG #> 57    R3D016 Release3 Vegetation 20th Percentile Canopy Height     UG #> 58    R3D017 Release3 Vegetation 80th Percentile Canopy Height     UG #> 59    R3D018 Release3 Vegetation               Basic Landcover     UG #> 60    R3D019 Release3 Vegetation        October 2017 NAIP NDVI     UG #> 61    R3D020 Release3 Vegetation       Septober 2019 NAIP NDVI     UG #> 73     BM012 Basemaps Vegetation      Canopy Structure Basemap     UG #> 74     BM013 Basemaps Vegetation             Landcover Basemap     UG ## Grabs detailed metadata for a specific dataset. item_meta <- sdp_get_metadata(catalog_id=\"R1D001\",return_list=TRUE)  ## Prints the detailed description. item_description <- item_meta$qgis$abstract[[1]] print(item_description) #> [1] \"This map represents estimated stream flowlines from a hydrologically corrected digital elevation model. The lines were derived in GRASS GIS using a multi-direction algorithm that allows channel braiding. Each stream segment is identified by a unique integer. Stream lines were delineated for drainage areas greater than 512000 square meters.\\n\""},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"accessing-sdp-data-in-the-cloud","dir":"","previous_headings":"","what":"Accessing SDP data in the cloud.","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"function sdp_get_raster(), creates R representations cloud-based datasets can used processing, returning SpatRaster can manipulated using functions terra package. ## Extracting samples SDP data. function sdp_extract_data() extracts samples datasets locations represented points, lines, polygons.  line polygon locations sdp_extract_data() summarizes raster values line polygon. default method computes mean value polygon, can also specify summary functions using sum_fun argument. can also return cell values intersecting line polygon specifying sum_fun=NULL. Passing argument exact=TRUE polygon features returns proportion raster cell included polygon (useful computing area-weighted means.)","code":"## Creates a `SpatRaster` object for a dataset. dem <- sdp_get_raster(catalog_id=\"R3D009\") terra::plot(dem) ## Extracts values of an SDP dataset. elev <- sdp_get_raster(catalog_id=\"R3D009\") slope <- sdp_get_raster(catalog_id=\"R3D012\")  location_df <- data.frame(SiteName=c(\"Roaring Judy\",\"Gothic\",\"Galena Lake\"),                           Lat=c(38.716995,38.958446,39.021644),                           Lon=c(-106.853186,-106.988934,-107.072569)) location_sv <- terra::vect(location_df,geom=c(\"Lon\",\"Lat\"),crs=\"EPSG:4327\")  dem_sample <- sdp_extract_data(raster=elev,locations=location_sv) #> [1] \"Re-projecting locations to coordinate system of the raster.\" #> [1] \"Extracting data at 3 locations for 1 raster layers.\" #> [1] \"Extraction complete.\" slope_sample <- sdp_extract_data(raster=slope,locations=dem_sample) #> [1] \"Extracting data at 3 locations for 1 raster layers.\" #> [1] \"Extraction complete.\" plot(slope_sample$UG_dem_3m_v1,slope_sample$UG_dem_slope_1m_v1,xlab=\"Elevation (m).\",      ylab=\"Slope (degrees)\") slope <- sdp_get_raster(catalog_id=\"R3D012\")  location_poly <- data.frame(SiteName=c(\"Wet\",\"Conifer\",\"Rocky\"),                             WKT=c(\"POLYGON ((327651 4313638,327620 4313727,327693 4313759, 327651 4313638))\",                                    \"POLYGON ((327340 4314059,327450 4314026,327418 4313970,327340 4314059))\",                                    \"POLYGON ((328193 4314314,328285 4314274,328244 4314223, 328193 4314314))\")) location_poly_sv <- terra::vect(location_poly,geom=\"WKT\",crs=\"EPSG:32613\")  slope_site_mean <- sdp_extract_data(raster=slope,locations=location_poly_sv) #> [1] \"Extracting data at 3 locations for 1 raster layers.\" #> [1] \"Extraction complete.\" slope_site_sd <- sdp_extract_data(raster=slope,locations=slope_site_mean,                                   sum_fun=sd,bind=TRUE) #> [1] \"Extracting data at 3 locations for 1 raster layers.\" #> [1] \"Extraction complete.\" names(slope_site_sd) <- c(\"SiteName\",\"ID\",\"Slope_mean\",\"ID2\",\"Slope_sd\")  plot(slope_site_sd$Slope_mean,slope_site_sd$Slope_sd,xlab=\"Slope Mean (deg.)\",      ylab=\"Slope Standard Deviation\",pch=\"\") text(slope_site_sd$Slope_mean,slope_site_sd$Slope_sd,labels=slope_site_sd$SiteName) slope_allcells <- sdp_extract_data(raster=slope,locations=slope_site_mean,                                   sum_fun=NULL,exact=TRUE,bind=FALSE) #> [1] \"Extracting data at 3 locations for 1 raster layers.\" #> Warning in sdp_extract_data(raster = slope, locations = slope_site_mean, : #> Function will always return a data frame if `bind=FALSE`. #> [1] \"Extraction complete.\" head(slope_allcells) #>   ID UG_dem_slope_1m_v1   fraction #> 1  1           4.609455 0.01733949 #> 2  1           6.018766 0.34246161 #> 3  1           9.753592 0.60725906 #> 4  1           3.104769 0.06934668 #> 5  1           6.362072 0.46575703 #> 6  1           6.617933 0.88677505"},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"working-with-raster-time-series","dir":"","previous_headings":"","what":"Working with raster time-series","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"sdp_get_raster() sdp_extract_data() functions also provide convenience features subsetting time-series datasets day year.","code":"## Connects to rasters from a temporal subset of daily data. tmax <- sdp_get_raster(\"R4D004\",date_start=as.Date(\"2011-12-01\"),date_end=as.Date(\"2011-12-30\")) #> [1] \"Returning dataset with 30 layers, be patient...\"  ## Further subsets when extracting data tmax_sample <- sdp_extract_data(tmax,location_sv,date_start=as.Date(\"2011-12-01\"),date_end=as.Date(\"2011-12-20\")) #> [1] \"Re-projecting locations to coordinate system of the raster.\" #> [1] \"Extracting data at 3 locations for 20 raster layers.\" #> [1] \"Extraction complete.\" tmax_df <- as.data.frame(tmax_sample) dates <- as.Date(names(tmax_df)[3:ncol(tmax_sample)]) sites <- tmax_df$SiteName  ##Plots the result plot(dates,tmax_df[1,3:ncol(tmax_sample)],type=\"l\",ylab=\"Tmax (C)\",ylim=c(-15,7)) points(dates,tmax_df[2,3:ncol(tmax_sample)],type=\"l\",col=3) points(dates,tmax_df[3,3:ncol(tmax_sample)],type=\"l\",col=4) legend(\"bottomright\", legend=sites,col=c(1,3,4),bty=\"n\",lty=1) ##Retrieving rasters from a subset of years. snow_yearly <- sdp_get_raster(\"R4D001\",years=c(2012,2019)) #> [1] \"Returning dataset with 2 layers be patient...\" terra::plot(snow_yearly,range=c(60,230))"},{"path":"https://rmbl-sdp.github.io/rSDP/index.html","id":"extracting-data-from-large-time-series-datasets","dir":"","previous_headings":"","what":"Extracting data from large time-series datasets.","title":"Discover, Query, and Subset Data from the RMBL Spatial Data Platform","text":"extracting subsets large datasets, â€™s sometimes good idea loop small subsets rather extracting single large raster object many (sometimes hundreds) layers.","code":"## Extracts with a single call. start1 <- Sys.time() tmax1 <- sdp_get_raster(\"R4D004\",date_start=as.Date(\"2004-10-01\"),date_end=as.Date(\"2004-10-31\")) #> [1] \"Returning dataset with 31 layers, be patient...\"  tmax_extr1 <- sdp_extract_data(tmax1,location_sv,verbose=FALSE) elapsed1 <- Sys.time() - start1  ## Loops over layers (different subset to avoid cacheing). start2 <- Sys.time() tmax2 <- sdp_get_raster(\"R4D004\",date_start=as.Date(\"2005-10-01\"),date_end=as.Date(\"2005-10-31\"),                         verbose=FALSE) locations_proj <- terra:::project(location_sv,\"EPSG:32613\")  extr_list <- list() for(i in 1:terra::nlyr(tmax2)){   extr_dat <- sdp_extract_data(tmax2[[i]],locations_proj,verbose=FALSE)[,3]   extr_list[[i]] <- extr_dat } tmax_extr2 <- do.call(cbind,extr_list) elapsed2 <- Sys.time() - start2  ## Loops over creating the raster object itself.  ## This is slower single threaded, but can be more easily made parallel. start3 <- Sys.time() days <- seq(as.Date(\"2006-10-01\"),as.Date(\"2006-10-31\"),by=\"day\") extr_list3 <- list() for(i in 1:length(days)){   tmax3 <- sdp_get_raster(\"R4D004\",date_start=days[i],date_end=days[i],verbose=FALSE)   extr_dat <- sdp_extract_data(tmax3,locations_proj,verbose=FALSE)[,3]   extr_list3[[i]] <- extr_dat } tmax_extr3 <- do.call(cbind,extr_list3) elapsed3 <- Sys.time() - start3  ## Parallel extraction via foreach. library(foreach) #> Warning: package 'foreach' was built under R version 4.1.2 library(doParallel) #> Warning: package 'doParallel' was built under R version 4.1.2 #> Loading required package: iterators #> Warning: package 'iterators' was built under R version 4.1.2 #> Loading required package: parallel  start4 <- Sys.time() ##cl <- parallel::makeCluster(4) ##doParallel::registerDoParallel(cl) days <- seq(as.Date(\"2007-10-01\"),as.Date(\"2007-10-31\"),by=\"day\")  extr_list4 <- foreach::foreach(i=1:length(days),.packages=c(\"terra\",\"devtools\")) %do% {   devtools::load_all() ## During package development.   tmax4 <- rSDP::sdp_get_raster(\"R4D004\",date_start=days[i],date_end=days[i],verbose=FALSE)   extr_dat <- rSDP::sdp_extract_data(tmax4,locations_proj,verbose=FALSE)[,3]   (extr_dat) } #> Warning: package 'terra' was built under R version 4.1.2 #> terra 1.6.53 #> Loading required package: usethis #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP #> â„¹ Loading rSDP ##parallel::stopCluster(cl) tmax_extr4 <- do.call(cbind,extr_list4) elapsed4 <- Sys.time() - start4  ##Collects timings. timings <- data.frame(approach=c(\"Single Call\",\"Looping sdp_extract_data()\",\"Looping over sdp_get_raster()\",\"Foreach\"),                       timing=c(elapsed1,elapsed2,elapsed3,elapsed4)) timings #>                        approach        timing #> 1                   Single Call 17.31711 secs #> 2    Looping sdp_extract_data() 27.24529 secs #> 3 Looping over sdp_get_raster() 40.62688 secs #> 4                       Foreach 46.89118 secs"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/rSDP-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rSDP: Discover, Query, and Subset Data from the RMBL Spatial Data Platform â€” rSDP-package","title":"rSDP: Discover, Query, and Subset Data from the RMBL Spatial Data Platform â€” rSDP-package","text":"rSDP package provides simplified interface discovering, querying, subsetting data products incorporated RMBL Spatial Data Platform. RMBL SDP provides set curated, high-resolution, high-fidelity geospatial datasets set domains Western Colorado (USA) vicinity [Rocky Mountain Biological Laboratory](https://rmbl.org). information RMBL SDP [see ](https://www.rmbl.org/scientists/resources/spatial-data-platform/). SDP data products provided geospatial raster datasets [cloud-optimized Geotiff]() (COG) format. rSDP package provides functions access datasets cloud storage (Amazon S3) without downloading.","code":""},{"path":[]},{"path":"https://rmbl-sdp.github.io/rSDP/reference/rSDP-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rSDP: Discover, Query, and Subset Data from the RMBL Spatial Data Platform â€” rSDP-package","text":"Maintainer: Ian Breckheimer ikb@rmbl.org (ORCID)","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/replace_strngs.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Multiple Strings in a Vector â€” replace_strngs","title":"Replace Multiple Strings in a Vector â€” replace_strngs","text":"Replace Multiple Strings Vector","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/replace_strngs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Multiple Strings in a Vector â€” replace_strngs","text":"","code":"replace_strngs(x, y, vec, ...)"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/replace_strngs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Multiple Strings in a Vector â€” replace_strngs","text":"x vector strings replace y vector strings use instead vec initial character vector ... arguments passed gsub","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","title":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","text":"Extract SDP raster data set locations.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","text":"","code":"sdp_extract_data(   raster,   locations,   date_start = NULL,   date_end = NULL,   years = NULL,   unscale = TRUE,   catalog_id = NULL,   url_template = NULL,   bind = TRUE,   return_spatvector = TRUE,   method = \"bilinear\",   sum_fun = \"mean\",   verbose = TRUE,   ... )"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","text":"raster class SpatRaster. raster dataset (class terra::SpatRaster) extract data . locations vector dataset (class terra::SpatVector sf::sf) containing points, lines, polygons sample raster data. date_start class Date. raster dataset daily monthly time-series, minimum date extracted data. date_end class Date. raster dataset daily monthly time-series, maximum date extracted data. years numeric. raster dataset annual time-series, years data requested. unscale logical. returned dataset returned original scale? data rescaled storage access efficiency. catalog_id character. Alternative method specifying dataset sample. IMPLEMENTED YET. url_template character. Alternative method specifying whic dataset sample. IMPLEMENTED YET. bind logical. extracted data bound inputs? , data frame returned ID field common input data. return_spatvector logical. returned dataset vector dataset retained geometry (class terra::SpatVector). FALSE returns ordinary data frame. method Method extracting values (\"simple\" \"bilinear\"). \"simple\" values cell point falls returned. \"bilinear\" returned values interpolated values four nearest raster cells. Ignored locations represent lines points. sum_fun character function. Function use summarize raster cells overlap input features. Ignored extracting point. verbose logical. function print messages process? ... arguments pass along terra::Extract()","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","text":"data.frame SpatVector extracted data. layer raster dataset column returned data.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_extract_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract SDP raster data at a set of locations. â€” sdp_extract_data","text":"","code":"## Loads a raster. sdp_rast <- sdp_get_raster(\"R4D004\",date_start=as.Date(\"2021-11-02\"),date_end=as.Date(\"2021-11-03\")) #> [1] \"Returning dataset with 2 layers, be patient...\"  ## Sampling locations. location_pts <- data.frame(SiteName=c(\"Roaring Judy\",\"Gothic\",\"Galena Lake\"),                           Lat=c(38.716995,38.958446,39.021644),                           Lon=c(-106.853186,-106.988934,-107.072569)) location_sv <- terra::vect(location_pts,geom=c(\"Lon\",\"Lat\"),crs=\"EPSG:4327\")  ## Extract data for sampling locations. sdp_extr_sv <- sdp_extract_data(sdp_rast,location_sv,return_spatvector=TRUE) #> [1] \"Re-projecting locations to coordinate system of the raster.\" #> [1] \"Extracting data at 3 locations for 2 raster layers.\" #> [1] \"Extraction complete.\" sdp_extr_sv #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 3, 4  (geometries, attributes) #>  extent      : 320579.1, 338885.9, 4287002, 4321222  (xmin, xmax, ymin, ymax) #>  coord. ref. : WGS 84 / UTM zone 13N (EPSG:32613)  #>  names       :     SiteName    ID 2021-11-02 2021-11-03 #>  type        :        <chr> <num>      <num>      <num> #>  values      : Roaring Judy     1      7.938      9.894 #>                      Gothic     2      3.788      7.493 #>                 Galena Lake     3     0.1095      1.442  ## Can also return a data frame. sdp_extr_df <- sdp_extract_data(sdp_rast,location_sv,return_spatvector=TRUE) #> [1] \"Re-projecting locations to coordinate system of the raster.\" #> [1] \"Extracting data at 3 locations for 2 raster layers.\" #> [1] \"Extraction complete.\" sdp_extr_df #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 3, 4  (geometries, attributes) #>  extent      : 320579.1, 338885.9, 4287002, 4321222  (xmin, xmax, ymin, ymax) #>  coord. ref. : WGS 84 / UTM zone 13N (EPSG:32613)  #>  names       :     SiteName    ID 2021-11-02 2021-11-03 #>  type        :        <chr> <num>      <num>      <num> #>  values      : Roaring Judy     1      7.938      9.894 #>                      Gothic     2      3.788      7.493 #>                 Galena Lake     3     0.1095      1.442"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","title":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","text":"Discover SDP data downloading catalog information.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","text":"","code":"sdp_get_catalog(   domains = c(\"UG\", \"UER\", \"GT\"),   types = c(\"Mask\", \"Topo\", \"Vegetation\", \"Hydro\", \"Planning\", \"Radiation\", \"Snow\",     \"Climate\", \"Imagery\", \"Supplemental\"),   releases = c(\"Basemaps\", \"Release1\", \"Release2\", \"Release3\", \"Release4\"),   timeseries_types = c(\"Single\", \"Yearly\", \"Seasonal\", \"Monthly\", \"Daily\"),   deprecated = FALSE,   return_stac = FALSE )"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","text":"domains spatial domain desired data product. types type product return. releases release (group) data products return. timeseries_types datasets structured single datasets (e.g. Single), others time-series various periods (e.g.Monthly). deprecated older versions datasets returned, just latest version? return_stac IMPLEMENTED: results returned Spatio-temporal Asset Catalog? Otherwise return ordinary data frame.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","text":"data frame containing basic catalog information matched data products.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discover SDP data by downloading catalog information. â€” sdp_get_catalog","text":"","code":"## Gets information on all current datasets. sdp_cat <- sdp_get_catalog() str(sdp_cat) #> 'data.frame':\t78 obs. of  17 variables: #>  $ CatalogID      : chr  \"R1D001\" \"R1D002\" \"R1D003\" \"R1D004\" ... #>  $ Release        : chr  \"Release1\" \"Release1\" \"Release1\" \"Release1\" ... #>  $ Type           : chr  \"Hydro\" \"Hydro\" \"Hydro\" \"Hydro\" ... #>  $ Product        : chr  \"Large Stream Flowlines (Multi-flow Direction)\" \"Large Stream Flowlines (Single-flow Direction)\" \"Large Watersheds (Multi-flow Direction)\" \"Multi-direction Flow Accumulation\" ... #>  $ Domain         : chr  \"UER\" \"UER\" \"UER\" \"UER\" ... #>  $ Resolution     : chr  \"1m\" \"1m\" \"1m\" \"1m\" ... #>  $ Deprecated     : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ MinDate        : chr  \"7/16/18\" \"7/16/18\" \"7/16/18\" \"7/16/18\" ... #>  $ MaxDate        : chr  \"7/16/18\" \"7/16/18\" \"7/16/18\" \"7/16/18\" ... #>  $ MinYear        : int  2018 2018 2018 2018 2018 2018 2018 2018 2018 2018 ... #>  $ MaxYear        : int  2018 2018 2018 2018 2018 2018 2018 2018 2018 2018 ... #>  $ TimeSeriesType : chr  \"Single\" \"Single\" \"Single\" \"Single\" ... #>  $ DataUnit       : chr  \"categorical\" \"categorical\" \"categorical\" \"square meters\" ... #>  $ DataScaleFactor: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ DataOffset     : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Data.URL       : chr  \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_streams_512k_mfd_1m_v2.tif\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_streams_512k_sfd_1m_v2.tif\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_basins_512k_mfd_1m_v2.tif\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_flow_accum_mfd_1m_v3.tif\" ... #>  $ Metadata.URL   : chr  \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_streams_512k_mfd_1m_v2_metadata.xml\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_streams_512k_sfd_1m_v2_metadata.xml\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_basins_512k_mfd_1m_v2_metadata.xml\" \"https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_flow_accum_mfd_1m_v3_metadata.xml\" ...  ## Gets a subset of catalog entries for the Upper Gunnison (UG) domain. sdp_sub <- sdp_get_catalog(domains=\"UG\", types=\"Vegetation\",                           deprecated=FALSE,return_stac=FALSE) sdp_sub #>    CatalogID  Release       Type                       Product Domain #> 54    R3D013 Release3 Vegetation              Understory Cover     UG #> 55    R3D014 Release3 Vegetation       Vegetation Canopy Cover     UG #> 56    R3D015 Release3 Vegetation      Vegetation Canopy Height     UG #> 57    R3D016 Release3 Vegetation 20th Percentile Canopy Height     UG #> 58    R3D017 Release3 Vegetation 80th Percentile Canopy Height     UG #> 59    R3D018 Release3 Vegetation               Basic Landcover     UG #> 60    R3D019 Release3 Vegetation        October 2017 NAIP NDVI     UG #> 61    R3D020 Release3 Vegetation       Septober 2019 NAIP NDVI     UG #> 73     BM012 Basemaps Vegetation      Canopy Structure Basemap     UG #> 74     BM013 Basemaps Vegetation             Landcover Basemap     UG #>    Resolution Deprecated MinDate MaxDate MinYear MaxYear TimeSeriesType #> 54         3m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 55         3m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 56         1m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 57         3m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 58         3m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 59         1m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 60         1m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 61         1m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 73         2m      FALSE  9/7/19  9/7/19    2019    2019         Single #> 74         2m      FALSE  9/7/19  9/7/19    2019    2019         Single #>       DataUnit DataScaleFactor DataOffset #> 54  proportion               1          0 #> 55  proportion               1          0 #> 56      meters               1          0 #> 57      meters               1          0 #> 58      meters               1          0 #> 59 categorical               1          0 #> 60    unitless               1          0 #> 61    unitless               1          0 #> 73    unitless               1          0 #> 74    unitless               1          0 #>                                                                                                   Data.URL #> 54 https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_2mcover_3m_v2.tif #> 55   https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_cover_3m_v3.tif #> 56  https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_height_1m_v2.tif #> 57    https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_ht20_3m_v2.tif #> 58    https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_ht80_3m_v4.tif #> 59      https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_landcover_1m_v4.tif #> 60   https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_ndvi_oct2017_1m_v1.tif #> 61  https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_ndvi_sept2019_1m_v2.tif #> 73             https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/basemaps/UG_canopy_basemap_v3.tif #> 74          https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/basemaps/UG_landcover_basemap_v3.tif #>                                                                                                        Metadata.URL #> 54 https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_2mcover_3m_v2_metadata.xml #> 55   https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_cover_3m_v3_metadata.xml #> 56  https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_height_1m_v2_metadata.xml #> 57    https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_ht20_3m_v2_metadata.xml #> 58    https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_canopy_ht80_3m_v4_metadata.xml #> 59      https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_landcover_1m_v4_metadata.xml #> 60   https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_ndvi_oct2017_1m_v1_metadata.xml #> 61  https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release3/UG_ndvi_sept2019_1m_v2_metadata.xml #> 73             https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/basemaps/UG_canopy_basemap_v3_metadata.xml #> 74          https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/basemaps/UG_landcover_basemap_v3_metadata.xml"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","title":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","text":"Download detailed geospatial metadata SDP Datasets.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","text":"","code":"sdp_get_metadata(catalog_id, return_list = TRUE)"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","text":"catalog_id unique Catalog ID code desired dataset. return_list Logical. TRUE, output parsed R list object.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","text":"nested list (return_list=TRUE) XML document (return_list=FALSE) containing detailed geospatial metadata dataset.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download detailed geospatial metadata for SDP Datasets. â€” sdp_get_metadata","text":"","code":"##Get metadata for a specific item. sdp_get_metadata(catalog_id=\"R1D001\",return_list=TRUE) #> $qgis #> $qgis$identifier #> $qgis$identifier[[1]] #> [1] \"/vsicurl/https://rmbl-sdp.s3.us-east-2.amazonaws.com/data_products/released/release1/UER_streams_512k_mfd_1m_v2.tif\" #>  #>  #> $qgis$parentidentifier #> list() #>  #> $qgis$language #> $qgis$language[[1]] #> [1] \"en\" #>  #>  #> $qgis$type #> $qgis$type[[1]] #> [1] \"dataset\" #>  #>  #> $qgis$title #> $qgis$title[[1]] #> [1] \"Map of Multi-direction Stream Flowlines from the 2018 NEON AOP Digital Elevation Model\" #>  #>  #> $qgis$abstract #> $qgis$abstract[[1]] #> [1] \"This map represents estimated stream flowlines from a hydrologically corrected digital elevation model. The lines were derived in GRASS GIS using a multi-direction algorithm that allows channel braiding. Each stream segment is identified by a unique integer. Stream lines were delineated for drainage areas greater than 512000 square meters.\\n\" #>  #>  #> $qgis$keywords #> $qgis$keywords$keyword #> $qgis$keywords$keyword[[1]] #> [1] \"Environment\" #>  #>  #> $qgis$keywords$keyword #> $qgis$keywords$keyword[[1]] #> [1] \"Geoscientific Information\" #>  #>  #> $qgis$keywords$keyword #> $qgis$keywords$keyword[[1]] #> [1] \"Inland Waters\" #>  #>  #> $qgis$keywords$keyword #> $qgis$keywords$keyword[[1]] #> [1] \"Society\" #>  #>  #> attr(,\"vocabulary\") #> [1] \"gmd:topicCategory\" #>  #> $qgis$contact #> $qgis$contact$name #> $qgis$contact$name[[1]] #> [1] \"Ian Breckheimer\" #>  #>  #> $qgis$contact$organization #> $qgis$contact$organization[[1]] #> [1] \"Rocky Mountain Biological Laboratory\" #>  #>  #> $qgis$contact$position #> $qgis$contact$position[[1]] #> [1] \"Research Scientist\" #>  #>  #> $qgis$contact$voice #> list() #>  #> $qgis$contact$fax #> list() #>  #> $qgis$contact$email #> $qgis$contact$email[[1]] #> [1] \"ikb@rmbl.org\" #>  #>  #> $qgis$contact$role #> $qgis$contact$role[[1]] #> [1] \"owner\" #>  #>  #>  #> $qgis$links #> $qgis$links$link #> list() #> attr(,\"url\") #> [1] \"https://rmbl.org/data\" #> attr(,\"name\") #> [1] \"URL\" #> attr(,\"format\") #> [1] \"\" #> attr(,\"size\") #> [1] \"\" #> attr(,\"type\") #> [1] \"WWW:LINK\" #> attr(,\"mimeType\") #> [1] \"\" #> attr(,\"description\") #> [1] \"Spatial Data Platform Description\" #>  #>  #> $qgis$fees #> list() #>  #> $qgis$license #> $qgis$license[[1]] #> [1] \"Creative Commons Attribution 4.0\" #>  #>  #> $qgis$encoding #> list() #>  #> $qgis$crs #> $qgis$crs$spatialrefsys #> $qgis$crs$spatialrefsys$wkt #> $qgis$crs$spatialrefsys$wkt[[1]] #> [1] \"PROJCRS[\\\"WGS 84 / UTM zone 13N\\\",BASEGEOGCRS[\\\"WGS 84\\\",DATUM[\\\"World Geodetic System 1984\\\",ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,LENGTHUNIT[\\\"metre\\\",1]]],PRIMEM[\\\"Greenwich\\\",0,ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],ID[\\\"EPSG\\\",4326]],CONVERSION[\\\"UTM zone 13N\\\",METHOD[\\\"Transverse Mercator\\\",ID[\\\"EPSG\\\",9807]],PARAMETER[\\\"Latitude of natural origin\\\",0,ANGLEUNIT[\\\"degree\\\",0.0174532925199433],ID[\\\"EPSG\\\",8801]],PARAMETER[\\\"Longitude of natural origin\\\",-105,ANGLEUNIT[\\\"degree\\\",0.0174532925199433],ID[\\\"EPSG\\\",8802]],PARAMETER[\\\"Scale factor at natural origin\\\",0.9996,SCALEUNIT[\\\"unity\\\",1],ID[\\\"EPSG\\\",8805]],PARAMETER[\\\"False easting\\\",500000,LENGTHUNIT[\\\"metre\\\",1],ID[\\\"EPSG\\\",8806]],PARAMETER[\\\"False northing\\\",0,LENGTHUNIT[\\\"metre\\\",1],ID[\\\"EPSG\\\",8807]]],CS[Cartesian,2],AXIS[\\\"(E)\\\",east,ORDER[1],LENGTHUNIT[\\\"metre\\\",1]],AXIS[\\\"(N)\\\",north,ORDER[2],LENGTHUNIT[\\\"metre\\\",1]],USAGE[SCOPE[\\\"unknown\\\"],AREA[\\\"World - N hemisphere - 108Â°W to 102Â°W - by country\\\"],BBOX[0,-108,84,-102]],ID[\\\"EPSG\\\",32613]]\" #>  #>  #> $qgis$crs$spatialrefsys$proj4 #> $qgis$crs$spatialrefsys$proj4[[1]] #> [1] \"+proj=utm +zone=13 +datum=WGS84 +units=m +no_defs\" #>  #>  #> $qgis$crs$spatialrefsys$srsid #> $qgis$crs$spatialrefsys$srsid[[1]] #> [1] \"3097\" #>  #>  #> $qgis$crs$spatialrefsys$srid #> $qgis$crs$spatialrefsys$srid[[1]] #> [1] \"32613\" #>  #>  #> $qgis$crs$spatialrefsys$authid #> $qgis$crs$spatialrefsys$authid[[1]] #> [1] \"EPSG:32613\" #>  #>  #> $qgis$crs$spatialrefsys$description #> $qgis$crs$spatialrefsys$description[[1]] #> [1] \"WGS 84 / UTM zone 13N\" #>  #>  #> $qgis$crs$spatialrefsys$projectionacronym #> $qgis$crs$spatialrefsys$projectionacronym[[1]] #> [1] \"utm\" #>  #>  #> $qgis$crs$spatialrefsys$ellipsoidacronym #> $qgis$crs$spatialrefsys$ellipsoidacronym[[1]] #> [1] \"EPSG:7030\" #>  #>  #> $qgis$crs$spatialrefsys$geographicflag #> $qgis$crs$spatialrefsys$geographicflag[[1]] #> [1] \"false\" #>  #>  #>  #>  #> $qgis$extent #> $qgis$extent$spatial #> list() #> attr(,\"dimensions\") #> [1] \"2\" #> attr(,\"minx\") #> [1] \"315130\" #> attr(,\"minz\") #> [1] \"0\" #> attr(,\"maxx\") #> [1] \"337845\" #> attr(,\"maxz\") #> [1] \"0\" #> attr(,\"miny\") #> [1] \"4297480\" #> attr(,\"maxy\") #> [1] \"4323209\" #> attr(,\"crs\") #> [1] \"EPSG:32613\" #>  #> $qgis$extent$temporal #> $qgis$extent$temporal$period #> $qgis$extent$temporal$period$start #> list() #>  #> $qgis$extent$temporal$period$end #> list() #>  #>  #>  #>  #> attr(,\"version\") #> [1] \"3.10.2-A CoruÃ±a\" #>"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"Create R object representing SDP cloud-based dataset.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"","code":"sdp_get_raster(   catalog_id = NULL,   url = NULL,   years = NULL,   date_start = NULL,   date_end = NULL,   verbose = TRUE,   ... )"},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"catalog_id character. single valid catalog number SDP dataset. CatalogID field information returned sdp_get_catalog(). url character. valid URL (e.g. https://path..dataset.tif) cloud-based dataset. specify either catalog_id url, . years numeric. annual time-series data, numeric vector specifying years return. default NULL returns available years. date_start class Date. daily time-series data, first day data return. date_end class Date. daily time-series data, last day data return. verbose logical. function print status progress messages? ... arguments pass terra::rast() function.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"R object (class terra::SpatRaster) representing raster dataset.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"Files headers read cloud-based datasets using terra package, full dataset downloaded locally. Instead terra uses web-based file system embedded GDAL (VSICURL) access datasets cloud. large datasets slow network connections, function might take minute complete.","code":""},{"path":"https://rmbl-sdp.github.io/rSDP/reference/sdp_get_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R object representing an SDP cloud-based dataset. â€” sdp_get_raster","text":"","code":"## Lookup catalog number for a dataset. cat <- sdp_get_catalog(domain='UG',type='Vegetation') lc_id <- cat$CatalogID[cat$Product=='Basic Landcover']  ## Connect to the dataset without downloading landcover <- sdp_get_raster(lc_id) landcover #> class       : SpatRaster  #> dimensions  : 72603, 83004, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 305082, 388086, 4256064, 4328667  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 13N (EPSG:32613)  #> source      : UG_landcover_1m_v4.tif  #> color table : 1  #> name        : UG_landcover_v4@UG_01m"}]
